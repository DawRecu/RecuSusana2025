name: Despliegue continuo de 'Integramos Herramientas'

on:
  push:
    branches:
      - tests

jobs:
  despliegue:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}

    steps:
      #! Clonamos el repositorio en la máquina ubuntu
      - name: Checkout repository
        uses: actions/checkout@v4.2.2


      #! Nos aseguramos de que terraform esté instalado
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest

      #! Nos movemos al directorio donde está el terraform
      #! e iniciamos la configuración
      - name: Iniciar Terraform 
        run: |
          pwd
          cd ./Integramos-herramientas
          cd ./Terraform
          pwd
          terraform init
          ls

      #! Hacemos un plan para saber lo que va a crear
      - name: Terraform Plan
        run: |
          pwd
          cd ./Integramos-herramientas
          cd ./Terraform
          pwd
          terraform plan -out=tfplan

      #! Terraform apply para que aplique la IaC (Infra como Code)
      - name: Apply Terraform
        id: apply_terraform
        #? Aquí le indico el archivo que creé con el terraform plan.
        #? Me ahorro el --auto-approve
        run: |
          pwd
          cd ./Integramos-herramientas
          cd ./Terraform
          pwd
          terraform apply tfplan

      #! Verificamos los outputs
      - name: Verificar outputs
        run: |
          cd ./Integramos-herramientas  
          cd ./Terraform
          terraform output

      #! Subimos el tfstate
      - name: Subir el tfstate como "artefacto"
        uses: actions/upload-artifact@v4.6.2
        with:
          name: estado-tf
          path: terraform.tfstate

  destroy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
    if: github.event_name == 'workflow_dispatch'

    steps:
      #! Clonamos el repositorio en la máquina ubuntu
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      #! Descargamos el "artefacto" subido en el primer job
      - name: Descarga de "artefacto"
        uses: actions/download-artifact@v4.2.1
        with:
          name: estado-tf

      #! Nos aseguramos de que terraform esté instalado
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: latest

      #! Nos movemos al directorio donde está el terraform
      #! e iniciamos la configuración
      - name: Iniciar Terraform
        run: |
          pwd
          cd ./Integramos-herramientas
          cd ./Terraform
          pwd
          terraform init

      #! Hacemos terraform destroy
      - name: Terraform destroy
        run: |
          pwd
          cd ./Integramos-herramientas
          cd ./Terraform
          pwd
          terraform destroy --auto-approve